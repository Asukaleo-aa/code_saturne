#============================================================================
#
#                    Code_Saturne version 1.3
#                    ------------------------
#
#
#     This file is part of the Code_Saturne Kernel, element of the
#     Code_Saturne CFD tool.
#
#     Copyright (C) 1998-2008 EDF S.A., France
#
#     contact: saturne-support@edf.fr
#
#     The Code_Saturne Kernel is free software; you can redistribute it
#     and/or modify it under the terms of the GNU General Public License
#     as published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     The Code_Saturne Kernel is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied warranty
#     of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with the Code_Saturne Kernel; if not, write to the
#     Free Software Foundation, Inc.,
#     51 Franklin St, Fifth Floor,
#     Boston, MA  02110-1301  USA
#
#============================================================================
#
# Architecture
  NOM_ARCH=`uname -s`
  if [ "$NOM_ARCH" = "Linux" ] ; then
    if [ "`hostname | cut -c1-6`" = "tantal" ] ; then
      NOM_ARCH=Linux_CCRT
    elif [ "`uname -m`" = "ia64" ] ; then
      NOM_ARCH=Linux_IA64
    elif [ "`domainname 2>/dev/null`" = "cluster-chatou" ] ; then
      NOM_ARCH=Linux_Ch
    elif [ -d /bgl/BlueLight/ppcfloor ] ; then
      NOM_ARCH=Blue_Gene_L
    elif [ -d /bgsys/drivers/ppcfloor ] ; then
      NOM_ARCH=Blue_Gene_P
    else
      MACHINE=`uname -m`
      case "$MACHINE" in
        *86)    NOM_ARCH=Linux ;;
        x86_64) NOM_ARCH=Linux_x86_64 ;; 
        ia64)   NOM_ARCH=Linux_IA64 ;; 
        *)      NOM_ARCH=Linux_$MACHINE ;;
      esac
    fi
  fi

# Code_Saturne version

  if [ "$NOM_ARCH" = "Linux_CCRT" -o "$NOM_ARCH" = "Linux_IA64" ] ; then 
    CS_ROOT=/home/cont002/saturne
  elif [ "$NOM_ARCH" = "Blue_Gene_L" ] ; then 
    CS_ROOT=/gpfs2/home/saturne
  elif [ "$NOM_ARCH" = "Blue_Gene_P" ] ; then 
    CS_ROOT=/gpfs/home/saturne
  else
    CS_ROOT=/home/saturne
  fi
  CS_HOME=${CS_ROOT}/Noyau/ncs-1.3.3
  ECS_HOME=${CS_ROOT}/Enveloppe/ecs-1.3.3
  CSGUI_HOME=${CS_ROOT}/Interface/ics-1.3.3
  SYRCS_HOME=${CS_ROOT}/opt/syr_cs-2.1.1
#
  if [ "$NOM_ARCH" = "Linux" -a -d /home/prevalcs/HOMARD ] ; then
    CSHOMARD_HOME=/home/prevalcs/HOMARD
  else
    CSHOMARD_HOME=
  fi
#
# Path 
  PATH=$CS_HOME/bin:$ECS_HOME/bin:$PATH

# Libraries for the GUI (if necessary)
  if [ -d ${CS_ROOT}/opt/libxml2-2.6.19/arch/${NOM_ARCH}/lib ] ; then
    LD_LIBRARY_PATH=$CS_ROOT/opt/libxml2-2.6.19/arch/$NOM_ARCH/lib:$LD_LIBRARY_PATH
  fi

# Export variables
  export NOM_ARCH CS_ROOT CS_HOME ECS_HOME CSGUI_HOME
  export SYRCS_HOME CSHOMARD_HOME
  export PATH LD_LIBRARY_PATH

# Paths and libraries for MPI
  if [ "$NOM_ARCH" = "Linux" -o "$NOM_ARCH" = "Linux_x86_64" ] ; then
    CS_MPI_PATH=/home/saturne/opt/openmpi-1.2.6/arch/$NOM_ARCH/bin
  elif [ "$NOM_ARCH" = "Linux_Ch" ] ; then
    CS_MPI_PATH=/usr/local/mpichgm-1.2.6.14b-64b/bin
  else
    CS_MPI_PATH=
  fi
  export CS_MPI_PATH
