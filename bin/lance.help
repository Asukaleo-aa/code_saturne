Setting runcase options
=======================
=======================

The user can modify the size of the arrays of integers
  and of reals: LONGIA and LONGRA are used for that purpose,
  respectively.
The number of integers (LONGIA) and of reals (LONGRA) depends
  on the options used for the simulation, on the type of elements,
  on the mesh characteristics (2-D, 3-D, hybrid, hanging nodes,...)
  and on the number of variables, for instance.
If k-epsilon is used with NCEL being the number of mesh cells,
  a maximum of LONGIA reads 45*NCEL and of LONGRA, 220*NCEL.
If Rij-epsilon is used, the latter values augmented by 20%
  should be sufficient.
Those relatively high numbers are set to take into account
  2D meshes, which usually contain a lot of boundary faces.
  For large 3D cases, a more accurate estimation is given by:
For large 3-D simulation, a better estimation of LONGIA and LONGRA
  LONGIA =  25*NCEL et LONGRA = 120*NCEL.

               -------------------------------

The user may choose not to use the preprocessor
  (only for meshes in .tlc or .slc format) by setting
  SOLCOM=1
otherwise set SOLCOM=0 as a standard
WARNING: .slc and .tlc formats are obsolete and their use is deprecated.

               -------------------------------

To join meshes with the preprocessor, additional options must be defined:
   - assign to the MAILLAGE variable the name of the meshes between " ".
   - assign to the COMMANDE_RC variable the joining option. It is recommended
     to specify the color or group of the faces to be joined. If this can not
     be done, the options -color or -group should not be used (but the cost of
     the preprocessing will be higher and the process less robust). Selecting the
     faces can be performed by other means (see the preprocessor help by ecs -h).
  In the following example, the faces of color 3, 4 and 6 of the meshes
     titi.des and toto.unv are joined as:

    MAILLAGE="titi.des toto.unv"
    COMMANDE_RC="-j -color 3 4 6"

  If no joining is necessary, the variable COMMANDE_RC is left empty, as:

    COMMANDE_RC=

               -------------------------------

when the Code_Saturne GUI is used, the user assigns the name of the
  xml file to the variable PARAM. The file should be placed in
  the directory DATA of the case.

               -------------------------------

The variable COMMANDE_DF is used to cut the faces whose warp angle is larger
  than a given tolerance (in degrees). For instance, if the tolerance
  angle is 0.01 degrees (default value), the command reads:

    COMMANDE_DF="-cwf 0.01"

  If the user wants to use the mesh as obtained by the mesh generator,
    COMMANDE_DF is left empty, as:

    COMMANDE_DF=

               -------------------------------

When periodicity applies, COMMANDE_PERIO is used by the preprocessor,
  with the option -perio:

  Two types of periodicity are possible: translation and rotation.
    Translation : -perio -trans tx ty tz 
      (tx,ty,tz): vector components
    Rotation    : two methods are possible
      - the angle, the direction and an invariant point are given:
        -perio -rota -angle a -dir dx dy dz -invpt px py pz  
          a         : angle in degrees (between -180 and +180)
          (dx,dy,dz): rotation axis vector components
          (px,py,pz): rotation invariant point components
      - the matrix and an invariant point are given:
        -perio -rota -matrix m11 m12 m13 m21 m22 m23 m31 m32 m33 -invpt px py pz  
          mij       : matrix elements (line by line)
          (px,py,pz): rotation invariant point components

  Translation and rotation can be used together: 
        -perio -trans tx ty tz -rota -angle a 
                                     -dir dx dy dz -invpt px py pz  
     or -perio -trans tx ty tz -rota -matrix m11 m12 m13 
                                             m21 m22 m23 
                                             m31 m32 m33 
                                     -invpt   px py pz   
    The result is RoT (whatever the order of the rotation and translation in
      the command line).

     Rotation and translation have to be consistant with each other.

  It is better to use the faces where periodicity applies, by using the
    property of these faces, with their color for instance (faces
    can be selected by other means than their color: see ecs -h for more
    details), for instance:
      -perio -trans 10 0 0 -color 1 2

  Up to 3 periodicity directions can be imposed (one per spacial direction),
    for example: 
    -perio -trans 10 0 0 -perio -trans 0 1 0 -perio -trans 0 0 1

  If periodicity does not apply, COMMANDE_PERIO is left empty as:

    COMMANDE_PERIO=

  Example ("\" shows the continuation of the command line):

    COMMANDE_PERIO="-perio -trans -10.2 0 0 -color 2               \
                    -perio -rota -angle 90 -dir 0 0 1 -invpt 0 0 0 \
                           -color 3 4                              \
                    -perio -trans 0 1 0                            \ 
                           -rota -matrix 1 0  0                    \
                                         0 0 -1                    \
                                         0 1  0 -invpt 0 0 -0.2    "

               -------------------------------

If coupling with SYRTHES applies, (only one fluid simulation coupled
  with only one solid simulation), the variable COMMANDE_SYRTHES
  is used. When there is no coupling, COMMANDE_SYRTHES is left empty.
  In the following example, the fluid boundary faces of color 2 and 3
    are coupled: 

    COMMANDE_SYRTHES="-syrthes -color 2 3"

  For more complex (multiple) couplings, the script will have to be changed.

               -------------------------------

If thermochemistry applies, the name of the thermochemistry data file
  may be specified through DONNEES_THERMOCHIMIE. For example:
    DONNEES_THERMOCHIMIE="dp_FCP"

               -------------------------------


User input files can be specified with the FICHIERS_DONNEES_UTILISATEUR
  variable (left empty if none are used) and the files are located in DATA.
 
               -------------------------------

User output files to retrieve can be specified with
FICHIERS_RESULTATS_UTILISATEUR.

               -------------------------------

The NOMBRE_DE_PROCESSEURS option defines the number of MPI processes to use
  (ideally equal to the physical number of processors or cores, but this
  is not mandatory). If the variable is left empty, it is determined
  automatically (for PC's or workstations, NOMBRE_DE_PROCESSEURS is set to 1
  and for clusters or supercomputers, it is set to the number of processors
  reserved for the batch job).
  When running a calculation through a batch system, it is not recommended
  to force NOMBRE_DE_PROCESSEURS to a value different from the number of
  processors required for the batch job, as oversubscribing may lead to
  strongly degraded performance (and may even fail depending on the system's
  mpi policy), and under-subscribing means reserving unused processors.
  When running the script interactively (such as on a Linux PC),
  NOMBRE_DE_PROCESSEURS may be set to a lower value than the number of
  physical processors (to limit system load), or to a higher value
  (usually for testing, as this reduces performance).
  When coupling with SYRTHES using MPI, one process/processor is reserved
  for SYRTHES, so the number of processors used for the kernel is
  equal to nproc_noy = NOMBRE_DE_PROCESSEURS - 1.


If we wish to specify distant machines (or are running on a cluster
  with no batch system), the optional LISTE_PROCESSEURS string may be defined.
  Running on multiple processors not reserved for this task is not recommended,
  as load imbalance due to 1 processor running multiple jobs is enough to
  degrade the performance for the whole job. Also, running in parallel without
  a high performance network will lead to low performance (low latency being
  even more important than high bandwidth).
  Two simple examples:
    LISTE_PROCESSEURS="machine1 cpu=nb_cpu1 user=userid1 & machine2 cpu=nb_cpu2 user=userid2"
    LISTE_PROCESSEURS="machine1 & machine2"
  The & separates 2 machines in the list. Fields are as follows: 
    machine1 and machine2 indicate machine names (as given by the
      hostname command).
      for example: chi80xx.der.edf.fr 
    nb_cpu1 and nb_cpu2 indicate the number of processors on hosts
      machine1 and machine2
      for example, on a dual-processor machine: cpu=2 
    userid1 and userid2 indicate the user's login on  machine1 and machine2 
  Fields cpu= and user= are optional.  
  The machine from which the script is run will automatically be used with
  most MPI environments. 
  Selected machines must use a shared filesystem (at least NFS) and all
  be of the same general OS and architecture type.

               -------------------------------

The CS_TMP_PREFIX variable allows the user to specify in which temporary
  directory the calculation will run. If left empty, a default directory
  will be used (architecture dependent). If a value is specified,
  the temporary directory will be:
    RUN=$CS_TMP_PREFIX/tmp_Saturne/$STUDY.$CASE.$DATE

Specifying CS_TMP_PREFIX may be useful for example on a workstation so
  as to use a large local disk (CS_TMP_PREFIX=/local00/users/`whoami`
  for example).
  Under some batch systems, the default of TMPDIR may be destroyed after
  each run, so to keep this temporary directory after the run,
  another value must be specified (CS_TMP_PREFIX=$SCRATCHDIR for example).

               -------------------------------

Options OPTIMISATION and OPTION_LIB_EXT are more advanced, mainly
  for developers.

  OPTIMISATION allows selecting the optimization level
    (LO, DBG, EF, PROF, ...). By default, standard Code_Saturne choices
    are used. This parameter may be used to used debug or profiling
    libraries, or libraries built without optimization.
    For production runs, this should be left empty.
    A list of possible values for OPTIMISATION and a short explanation
    is given by makehelp (see OPT=...).

  OPTION_LIB_EXT allows specifying external libraries to link. In this
    case, the whole option to pass to the linker must be given.
    For example:
    OPTION_LIB_EXT="-L/home/saturne/opt/foo/lib -lfoo"

  VALGRIND enables running of the Kernel through Valgrind if this
    memory-checking tool is available (usually under Linux) To
    activate it:
      VALGRIND=valgrind
    possibly with specific options, such as for example
      VALGRIND="valgrind --tool=memcheck"
    If valgrind is not in the PATH, its full path must be specified.

  ARG_CS_VERIF allows activation of elementary mesh quality tests,
    as well as basic linear algebra operations micro-benchmarks.
    ="-q 0" : mesh quality criteria
    ="-q 1" : test precision of gradient for sin(x+2y+3z) with IMRGRA=0
    ="-q 2" : test precision of gradient for sin(x+2y+3z) with IMRGRA=1
    ="-q 3" : test precision of gradient for sin(x+2y+3z) with IMRGRA=2
    ="-q 4" : test precision of gradient for sin(x+2y+3z) with IMRGRA=3
    ="-q 5" : test precision of gradient for sin(x+2y+3z) with IMRGRA=4
    ="--benchmark": basic linear algebra operation benchmark
    ="--benchmark --mpitrace" : same as benchmark, with operations run
                                only once, for use with MPI trace tools.
    In mesh quality or benchmark mode, no parameter file or user
    subroutine is needed.

  ARG_CS_OUTPUT allows redirection of output. 
    The "--log" option allows redirecting output for a single-processor
    run or for rank 0 of a parallel run.
    "--log 0" output redirected to standard output
    "--log 1" output redirected to a "listing" file (default behavior)
    The "--logp" option allows redirection of output for ranks 1 to n-1
    for a parallel run on n processors:
    "--logp -1" turns off output for ranks > 0 (default behavior)
    "--logp 0" sends all output to the standard output (useful if every
      rank is associated to a different console, such as when running
      under a debugger).
    "--logp 1" redirects all output from ranks 1 to n-1 to files
      listing_n0002 to listing_n<N>.
    Options --log and --logp may be specified together or separately
    through the ARG_CS_OUTPUT variable.

  ECHOCOMM allows for echo of communications between the kernel,
    and SYRTHES 3. This is only useful when debugging a coupled
    calculation. To activate this options, assign a strictly positive
    value to ECHOCOMM. For each message exchanged, the ECHOCOMM first
    and last values will be printed (characters, integers, or doubles).
    By default, the string is kept empty. 
    Reasonable activation value: 
      ECHOCOMM="10"

  PILOTAGE_ADAPTATION allows use of mesh adaptation with the HOMARD
    tool. If the variable is absent or empty, no adaptation occurs.
    To activate adaptation, PILOTAGE_ADAPTATION will contain the name of
    a file containing adaptation directives. To obtain the syntax of
    this file, use PILOTAGE_ADAPTATION=help and run the script.
    THIS FUNCTIONALITY IS NOT YET IN PRODUCTION
